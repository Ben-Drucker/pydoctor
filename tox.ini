;
; Coverage is always reported at the end of test run.
; There is a dedicated hidden environment for publishing the coverage report
; to the codecov.io service.
;
[tox]
minversion=3.20.1
requires=
    virtualenv>=20.0.35
envlist =
    test-{py36,py37,py38,pypy3},pyflakes,twisted-apidoc


[testenv]
whitelist_externals =
    git
    rm
passenv = *


deps =
    test,test-{py36,py37,py38,pypy3},twisted-apidoc: git+https://github.com/twisted/twisted.git

    test: coverage
    test: pytest
    test: docutils
    test: hypothesis

    codecov-travis: codecov

    pyflakes: pyflakes


commands =
    test: coverage erase
    test: coverage run --source pydoctor --omit pydoctor/test/* --branch -m pytest {posargs:pydoctor}
    test: coverage report -m

    ; Hidden env for pusblishing coverage reports from Travis to codecov.io
    codecov-travis: coverage xml -o coverage.xml -i
    codecov-travis: codecov

    ; Custom pyflakes run to exlcude test files.
    pyflakes: /bin/sh -c "find pydoctor/ -name \*.py ! -path '*/testpackages/*' | xargs pyflakes"

    ; Run current version against twisted trunk
    twisted-apidoc: rm -rf {toxworkdir}/twisted-trunk
    twisted-apidoc: git clone --depth 1 --branch trunk https://github.com/twisted/twisted.git {toxworkdir}/twisted-trunk
    twisted-apidoc: /bin/sh -c "{toxworkdir}/twisted-trunk/bin/admin/build-apidocs {toxworkdir}/twisted-trunk/src {toxworkdir}/twisted-apidocs-build > {toxworkdir}/twisted-apidocs.log"
    twisted-apidoc: /bin/cat {toxworkdir}/twisted-apidocs.log
    ; Fail if the output of running pydoctor on Twisted is not emtpy.
    twisted-apidoc: /bin/sh -c "test ! -s {toxworkdir}/twisted-apidocs.log"


[testenv:mypy]
description = run mypy (static type checker)

deps =
    mypy>=0.770
    mypy-zope
    typing-extensions
    ; Libraries which include type annotations:
    hypothesis
    pytest>=6.0.0
    git+https://github.com/twisted/twisted.git

commands =
    mypy                                       \
        --cache-dir="{toxworkdir}/mypy_cache"  \
        {tty:--pretty:}                        \
        {posargs:pydoctor}
